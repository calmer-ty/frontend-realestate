       // const [apartment, setApartment] = useState<IApartmentData | null>(null);
  // 공공 데이터 아파트 실거래가 조회
  // useEffect(() => {
  //   // 데이터를 가져오는 함수
  //   const fetchData = async (): Promise<void> => {
  //     try {
  //       const apartmentData = await axios.get<IApartmentData>("/api/apartment");
  //       setApartment(apartmentData.data);
  //     } catch (error) {
  //       console.error("Error fetching data:", error);
  //     }
  //   };
  //   // 페이지 로드 시 데이터 가져오기
  //   void fetchData();
  // }, []);
     
     // 아파트 데이터가 있는 경우에만 마커를 생성하고 표시
      // if (apartment !== null) {
      //   await Promise.all(
      //     apartment?.response?.body.items.item.map(async (item) => {
      //       try {
      //         const { 법정동, 법정동본번코드, 아파트, 거래금액 } = item;
      //         const address = `서울특별시 ${법정동} ${법정동본번코드} ${아파트}`;

      //         // 주소를 이용하여 좌표를 가져오는 함수 호출
      //         const { data: coords } = await axios.get<{
      //           latitude: number;
      //           longitude: number;
      //         }>(`/api/geocode?address=${encodeURIComponent(address)}`);

      //         // 좌표를 이용하여 마커 생성
      //         const markerOptions = {
      //           position: new window.naver.maps.LatLng(
      //             coords.latitude,
      //             coords.longitude,
      //           ),
      //           map,
      //           // title: 아파트,
      //         };
      //         const marker = new window.naver.maps.Marker(markerOptions);

      //         // 마커를 지도에 표시
      //         const infoWindow = new window.naver.maps.InfoWindow({
      //           content: address + 거래금액, // 인포 윈도우에 표시할 내용
      //         });

      //         window.naver.maps.Event.addListener(marker, "click", () => {
      //           infoWindow.open(map, marker);
      //         });
      //       } catch (error) {
      //         console.error("Error fetching geocode:", error);
      //       }
      //     }),
      //   );
      // }